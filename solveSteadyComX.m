function solution = solveSteadyComX(modelCom, optPercentage)
%% solveSteadyComX
% The code sources to run the SteadyComX simulations with RACs
% Kim et al. (2021) "Resource-allocation constraint governs structure and function of microbial communities in metabolic modeling" Submitted
%
% Select an unique flux solution by solving a second optimization problem that minimizes the sum of exchange fluxes
%
% Inputs
%   modelCom        SteadyComX model in COBRA model structure (generated by "formulateSteadyComX.m")
%   optPercentage   Only consider solutions that give you at least a certain percentage of the optimal solution (default = 99.9999 %)
%
% Outputs
%   solution        COBRA solution structure
%

%% Process inputs
if nargin < 2
    optPercentage = 99.9999;
end

%% Find maximum community biomass
solution = optimizeCbModel(modelCom);

%% Minimize sum of exchange fluxes
if ~isempty(solution.obj)
    LPproblem.A  = [modelCom.S; sparse(1, size(modelCom.S,2))];
    LPproblem.A(end, find(modelCom.c == 1)) = 1;
    LPproblem.b  = [modelCom.b; solution.obj * optPercentage / 100];
    LPproblem.c  = zeros(length(modelCom.c),1);
    LPproblem.lb = modelCom.lb;
    LPproblem.ub = modelCom.ub;
    LPproblem.csense = [modelCom.csense; 'G'];    
    LPproblem.osense = 1;
    for i = 1:length(modelCom.metExs)
        for j = 1:size(modelCom.metExsToModels_F,2)
            if modelCom.metExsToModels_F(i,j) > 0
                LPproblem.c(modelCom.metExsToModels_F(i,j)) = 1;
            end
            if modelCom.metExsToModels_R(i,j) > 0
                LPproblem.c(modelCom.metExsToModels_R(i,j)) = 1;
            end
        end
    end
    solution = solveCobraLP(LPproblem);
end

end